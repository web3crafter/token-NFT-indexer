import { z } from "zod"

export const coingeckoSchema = z.object({
  id: z.string(),
  symbol: z.string(),
  name: z.string(),
  web_slug: z.string(),
  asset_platform_id: z.nullable(z.string()),
  description: z.object({ en: z.string() }),
  links: z.object({
    homepage: z.array(z.string()),
    blockchain_site: z.array(z.string()),
    official_forum_url: z.array(z.string()),
    chat_url: z.array(z.string()),
    announcement_url: z.array(z.string()),
    twitter_screen_name: z.string(),
    facebook_username: z.string(),
    bitcointalk_thread_identifier: z.nullable(z.string()),
    telegram_channel_identifier: z.string(),
    subreddit_url: z.string(),
    repos_url: z.object({
      github: z.array(z.string()),
      bitbucket: z.array(z.unknown()),
    }),
  }),
  image: z.object({ thumb: z.string(), small: z.string(), large: z.string() }),
  watchlist_portfolio_users: z.number(),
  market_cap_rank: z.number(),
  market_data: z.object({
    current_price: z.object({ usd: z.number() }),
    total_value_locked: z.nullable(z.string()),
    mcap_to_tvl_ratio: z.nullable(z.string()),
    fdv_to_tvl_ratio: z.nullable(z.string()),
    roi: z
      .object({
        times: z.number(),
        currency: z.string(),
        percentage: z.number(),
      })
      .nullable(),
    ath: z.object({ usd: z.number() }),
    ath_change_percentage: z.object({ usd: z.number() }),
    ath_date: z.object({ usd: z.string() }),
    atl: z.object({ usd: z.number() }),
    atl_change_percentage: z.object({ usd: z.number() }),
    atl_date: z.object({ usd: z.string() }),
    market_cap: z.object({ usd: z.number() }),
    market_cap_rank: z.number(),
    fully_diluted_valuation: z.object({ usd: z.number() }),
    market_cap_fdv_ratio: z.number(),
    total_volume: z.object({ usd: z.number() }),
    price_change_24h: z.number(),
    price_change_percentage_24h: z.number(),
    price_change_24h_in_currency: z.object({ usd: z.number() }),
    total_supply: z.number(),
    max_supply: z.nullable(z.number()),
    circulating_supply: z.number(),
    last_updated: z.string(),
  }),
  community_data: z.object({
    facebook_likes: z.nullable(z.string()),
    twitter_followers: z.number(),
    reddit_average_posts_48h: z.number(),
    reddit_average_comments_48h: z.number(),
    reddit_subscribers: z.number(),
    reddit_accounts_active_48h: z.number(),
    telegram_channel_user_count: z.nullable(z.string()),
  }),
  status_updates: z.array(z.unknown()),
  last_updated: z.string(),
})

export type Coingecko = z.infer<typeof coingeckoSchema>
